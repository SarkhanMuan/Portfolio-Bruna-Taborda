name: Continuous Integration

on:
  pull_request:
    branches: [ "main" ]
  push:
    branches: [ "main" ]

jobs:
  # Job de Linter (Atualizado para actions válidas)
  lint:
    name: Run code linters
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      # Novo Linter HTML (usando ação mais genérica ou popular)
      - name: Lint HTML files (using html-validate)
        uses: docker://ghcr.io/html-validate/html-validate:latest
        with:
          args: . # Assume que você quer validar todos os arquivos no diretório

      # Novo Linter CSS (usando o linter oficial de forma direta)
      - name: Lint CSS files (using stylelint)
        uses: actions/setup-node@v4 # Configura Node.js para rodar stylelint
        with:
          node-version: '20' # Use uma versão LTS

      - name: Install Stylelint and dependencies
        run: |
          npm install stylelint stylelint-config-standard
          # Se você tem configurações específicas, instale-as aqui

      - name: Run Stylelint
        run: npx stylelint "**/*.css" # Ajuste o glob pattern conforme necessário

  ---

  # Rodar os Testes Unitários
  test:
    # Nome do Job
    name: Run Unit Tests
    # Precisa do job de lint para passar primeiro
    needs: lint
    # Máquina virtual
    runs-on: ubuntu-latest

    steps:
      # 1. Baixar o código do repositório
      - name: Check out code
        uses: actions/checkout@v4

      # 2. Configurar o ambiente Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10' # Usando uma versão moderna do Python

      # 3. Instalar as dependências do nosso arquivo requirements.txt
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      # 4. Rodar o Pytest!
      - name: Run tests with pytest
        run: pytest
